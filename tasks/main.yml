# Steps:
# 1a. Update package cache
# 1b. Install required packages
# 2. Disable virbr0
# 3a. List existing bridges
# 3b. Create required default
# 3c. Add physical interfaces to bridges
# 3d. Set bridges up
# 3e. Set bridge interfaces up
# 4. Profit

- name: Step 1a - Update APT package cache
  apt:
    update_cache: true
    cache_valid_time: 0
  retries: 2
  delay: 5
  tags: [ kvm-install, always ]

- name: Step 1b - Install required packages
  apt:
    state: present
    pkg: "{{ kvm_required_packages + kvm_required_packages_user | default([])  }}"
  retries: 2
  delay: 5
  tags: [ kvm-install, always ]

- name: Step 2 - Remove virbr0
  command: virsh net-autostart --disable default
  become: yes
  tags: [ remove-virbr0, always ]

- debug:
    var: kvm_required_bridges
  tags: debug

- name: Step 3a - List existing bridges
  shell: brctl show | tail -n +2 | awk '{ print $1 }'
  register: existing_bridges
  become: true
  tags: [ always ]

- debug:
    msg: "{{ existing_bridges }}"
  tags: [ never, debug ]

- name: Step 3b - Create bridges
  command: brctl addbr {{item.name}}
  become: yes
  with_items: "{{ kvm_required_bridges }}"
  when: item.name not in existing_bridges.stdout_lines
  tags: [ create-bridges, always ]

- name: Step 3c - Add physical interfaces to bridges
  command: brctl addif {{item.name}} {{item.intf}}
  become: yes
  with_items: "{{ kvm_required_bridges }}"
  when: item.name not in existing_bridges.stdout_lines
  tags: [ create-bridges, always ]

- name: Step 3d - Bring bridges up
  command: ip link set dev {{ item.name }} up
  become: yes
  with_items: "{{ kvm_required_bridges }}"
  when: item.name not in existing_bridges.stdout_lines
  tags: [ create-bridges, always ]

- name: Step 3e - Bring bridge external interface up
  command: ip link set {{ item.intf }} up
  become: yes
  with_items: "{{ kvm_required_bridges }}"
  when: item.name not in existing_bridges.stdout_lines
  tags: [ create-bridges, always ]
